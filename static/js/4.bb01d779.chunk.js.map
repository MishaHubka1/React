{"version":3,"sources":["Components/Dialogs/Dialogs.module.css","Components/Dialogs/DialogItem/DialogsItem.jsx","Components/Dialogs/Message/Message.jsx","Components/Dialogs/AddMessageForm/AddMessageForm.js","Components/Dialogs/Dialogs.jsx","Components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","DialogItem","props","path","id","className","s","dialog","active","to","name","Message","message","maxLenght50","maxLengthCreator","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","validate","required","placeholder","Dialogs","state","dialogsPage","dialogsElements","dialogs","map","d","messagesElements","messages","m","isAuth","dialogsItems","values","sendMessage","newMessageBody","compose","connect","dispatch","sendMessageCreator","withAuthRedirect"],"mappings":"2FACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,2B,kFCiBnKC,EAdI,SAACC,GAEhB,IAAIC,EAAO,YAAcD,EAAME,GAI/B,OACI,qBAAKC,UAAWC,IAAEC,OAAS,IAAMD,IAAEE,OAAnC,SACI,cAAC,IAAD,CAASC,GAAIN,EAAb,SAAoBD,EAAMQ,UCEvBC,EATC,SAACT,GACb,OACI,qBAAKG,UAAWC,IAAEC,OAAlB,SAA2BL,EAAMU,W,kDCHnCC,EAAcC,YAAiB,IAetBC,cAAU,CAACC,KAAM,2BAAjBD,EAbQ,SAACb,GACpB,OACA,uBAAMe,SAAUf,EAAMgB,aAAtB,UACA,8BACI,cAACC,EAAA,EAAD,CAAOC,UAAWC,IAClBC,SAAU,CAACC,IAAUV,GACrBH,KAAK,iBAAiBc,YAAY,yBAEtC,8BAAK,kDC6BMC,EAlCC,SAACvB,GAEb,IAAIwB,EAAQxB,EAAMyB,YAEdC,EAAkBF,EAAMG,QAAQC,KAAK,SAAAC,GAAC,OAAI,cAAC,EAAD,CAAYrB,KAAMqB,EAAErB,KAAiBN,GAAI2B,EAAE3B,IAAZ2B,EAAE3B,OAC3E4B,EAAmBN,EAAMO,SAASH,KAAK,SAAAI,GAAC,OAAI,cAAC,EAAD,CAAStB,QAASsB,EAAEtB,SAAcsB,EAAE9B,OAMpF,OAAKF,EAAMiC,OAGP,sBAAK9B,UAAWC,IAAEuB,QAAlB,UAEI,qBAAKxB,UAAWC,IAAE8B,aAAlB,SAEMR,IAIN,qBAAKvB,UAAWC,IAAE2B,SAAlB,SACG,oCAAQD,EAAR,SAGH,cAAC,EAAD,CAAgBf,SAnBJ,SAACoB,GACjBnC,EAAMoC,YAAYD,EAAOE,sBAGH,cAAC,IAAD,CAAU9B,GAAI,Y,wBCO7B+B,sBACXC,aAhBkB,SAACf,GACnB,MAAO,CACHC,YAAaD,EAAMC,gBAGF,SAACe,GACtB,MAAO,CACHJ,YAAa,SAACC,GACXG,EAASC,YAAmBJ,SASnCK,IAFWJ,CAGbf","file":"static/js/4.bb01d779.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__1eAZo\",\"dialogsItems\":\"Dialogs_dialogsItems__2AmXE\",\"active\":\"Dialogs_active__2-Df0\",\"messages\":\"Dialogs_messages__4l3KH\",\"message\":\"Dialogs_message__2Q_Iw\"};","import {NavLink} from 'react-router-dom'\r\nimport s from './../Dialogs.module.css'\r\n\r\n\r\nconst DialogItem = (props) => {\r\n\r\n    let path = \"/dialogs/\" + props.id;\r\n\r\n\r\n\r\n    return (\r\n        <div className={s.dialog + ' ' + s.active}>\r\n            <NavLink to={path}>{props.name}</NavLink>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default DialogItem;","import s from './../Dialogs.module.css'\r\nimport React from \"react\";\r\n\r\n\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div className={s.dialog}>{props.message}</div >\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\nexport default Message;","import {Field, reduxForm} from \"redux-form\";\r\nimport { maxLengthCreator, required } from \"../../../utils/validators/validators\";\r\nimport { Textarea } from \"../../common/FormsControls/FormsControls\";\r\n\r\nconst maxLenght50 = maxLengthCreator(50);\r\n\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n    <form onSubmit={props.handleSubmit}>\r\n    <div>\r\n        <Field component={Textarea} \r\n        validate={[required, maxLenght50]}\r\n        name=\"newMessageBody\" placeholder=\"Enter your message\" />\r\n    </div>\r\n    <div><button>Send</button></div>\r\n</form>\r\n    )\r\n}\r\n\r\nexport default reduxForm({form: 'dialog-add-message-form'}) (AddMessageForm);","import React from 'react';\r\nimport s from './Dialogs.module.css'\r\nimport DialogItem from \"./DialogItem/DialogsItem\";\r\nimport Message from \"./Message/Message\";\r\nimport { Redirect } from 'react-router-dom';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport AddMessageForm from './AddMessageForm/AddMessageForm';\r\n\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let state = props.dialogsPage;\r\n\r\n    let dialogsElements = state.dialogs.map( d => <DialogItem name={d.name} key={d.id} id={d.id} /> );\r\n    let messagesElements = state.messages.map( m => <Message message={m.message} key={m.id} /> );\r\n\r\n    let addNewMessage = (values) => {\r\n        props.sendMessage(values.newMessageBody);\r\n            }\r\n\r\n    if (!props.isAuth) return <Redirect to={\"/login\"} />;\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n\r\n            <div className={s.dialogsItems}>\r\n\r\n                { dialogsElements }\r\n\r\n            </div>\r\n\r\n            <div className={s.messages}>\r\n               <div> { messagesElements } </div>\r\n               \r\n            </div>\r\n            <AddMessageForm onSubmit={addNewMessage} />\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default Dialogs;","import React from 'react';\r\nimport s from './Dialogs.module.css'\r\nimport DialogItem from \"./DialogItem/DialogsItem\";\r\nimport Message from \"./Message/Message\";\r\nimport {sendMessageCreator} from \"../../redux/dialogs-reduser\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (newMessageBody) => {\r\n           dispatch(sendMessageCreator(newMessageBody));\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default compose(\r\n    connect (mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs);"],"sourceRoot":""}